apiVersion: batch/v1
kind: CronJob
metadata:
  name: apollo-backup
spec:
  schedule: "0 */2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: redmine-sa
          containers:
          - name: backup-mysql
            image: bitnami/kubectl:latest
            imagePullPolicy: IfNotPresent
            env:
              - name: app
                value: redmine
              - name: host
                value: apollo-services.production.svc.cluster.local
              - name: database
                value: redmine
              - name: username
                value: root
              - name: GITHUB_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: apollo-secrets
                    key: github-token
              - name: backup_local
                value: /tmp/backup
              - name: backup_remote
                value: google_drive:Backups/MySQL
            command:
            - /bin/bash
            - -c
            - git clone --branch dev --progress https://${GITHUB_TOKEN}@github.com/asofainy/toolbox.git /tmp/toolbox && chmod -R +x /tmp/toolbox ;
              /tmp/toolbox/kubectl/run.sh production apollo mysql "
              apt-get update && apt-get install git -y ;
              rm -rf /tmp/toolbox ;
              git clone --branch dev --progress https://${GITHUB_TOKEN}@github.com/asofainy/toolbox.git /tmp/toolbox && chmod -R +x /tmp/toolbox ;
              /tmp/toolbox/mysql/backup.sh $host $username $database $backup_local ;
              /tmp/toolbox/rclone/setup.sh ;
              /tmp/toolbox/rclone/copy.sh $backup_local $backup_remote"
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: apollo-sync
spec:
  schedule: "15 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: redmine-sa
          containers:
          - name: sync-repo
            image: bitnami/kubectl:latest
            imagePullPolicy: IfNotPresent
            command:
            - /bin/bash
            - -c
            - pod=$(kubectl get pods -n production -l app=apollo --field-selector status.phase=Running | cut -f1 -d ' ' | tail -n 1 ) ; echo $pod ; kubectl exec $pod --namespace production -c redmine -- /opt/buildbox/scripts/sync-repo.sh
          
          - name: sync-library
            image: bitnami/kubectl:latest
            imagePullPolicy: IfNotPresent
            command:
            - /bin/bash
            - -c
            - pod=$(kubectl get pods -n production -l app=apollo --field-selector status.phase=Running | cut -f1 -d ' ' | tail -n 1 ) ; echo $pod ; kubectl exec $pod --namespace production -c redmine -- /opt/buildbox/scripts/sync-library.sh
          
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: apollo-index
spec:
  schedule: "30 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: redmine-sa
          containers:
          - name: index-redmine
            image: bitnami/kubectl:latest
            imagePullPolicy: IfNotPresent
            command:
            - /bin/bash
            - -c
            - pod=$(kubectl get pods -n production -l app=apollo --field-selector status.phase=Running | cut -f1 -d ' ' | tail -n 1 ) ; echo $pod ; kubectl exec $pod --namespace production -c redmine -- /opt/buildbox/scripts/index.sh $RAILS_ENV production
          restartPolicy: OnFailure
